// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.monitoring.v3;

import "google/api/annotations.proto";
import "google/api/label.proto";
import "google/monitoring/v3/common.proto";

option csharp_namespace = "Google.Cloud.Monitoring.V3";
option go_package = "google.golang.org/genproto/googleapis/monitoring/v3;monitoring";
option java_multiple_files = true;
option java_outer_classname = "NotificationProto";
option java_package = "com.google.monitoring.v3";


// A description of a notification channel. The descriptor includes
// the properties of the channel and the set of labels or fields that
// must be specified to configure channels of a given type.
message NotificationChannelDescriptor {
  // The full REST resource name for this descriptor. The syntax is:
  //
  //    "projects/[PROJECT_ID]/notificationChannelDescriptors/[TYPE]"
  //
  // In the above, "[TYPE]" is the value of the `"type"` field.
  string name = 6;

  // The type of notification channel, such as "email", "sms", etc.
  // Notification channel types are globally unique.
  string type = 1;

  // A human-readable name for the notification channel type.  This
  // form of the name is suitable for a user interface.
  string display_name = 2;

  // A human-readable description of the notification channel
  // type. The description may include a description of the properties
  // of the channel and pointers to external documentation.
  string description = 3;

  // The set of labels that must be defined to identify a particular
  // channel of the corresponding type. Each label includes a
  // description for how that field should be populated.
  repeated google.api.LabelDescriptor labels = 4;

  // The tiers that support this notification channel; the project service tier
  // must be one of the supported_tiers
  repeated ServiceTier supported_tiers = 5;
}

// A `NotificationChannel` is an medium through which an alert is
// delivered when a policy violation is detected. Examples of channels
// include email, SMS, and third-party messaging applications.  Fields
// containing sensitive information like authentication tokens or
// contact info are only partially populated on retrieval.
message NotificationChannel {
  // The type of the notification channel. This field matches the
  // value of the [NotificationChannelDescriptor.type][google.monitoring.v3.NotificationChannelDescriptor.type] field.
  string type = 1;

  // The full REST resource name for this channel. The syntax is:
  //
  //   "projects/[PROJECT_ID]/notificationChannels/[CHANNEL_ID]"
  //
  // A channel ID is automatically assigned by the server on creation.
  string name = 6;

  // A human-readable name for this notification channel. This form is
  // suitable naming the channel in a user interface.
  string display_name = 3;

  // A human-readable description of this notification channel. This
  // description may provide additional details, beyond the display
  // name, for the channel.
  string description = 4;

  // Configuration fields that define the channel and its behavior. The
  // permissible and required labels are specified in the
  // [NotificationChannelDescriptor.labels][google.monitoring.v3.NotificationChannelDescriptor.labels] of the
  // [NotificationChannelDescriptor] corresponding to `"type"`.
  map<string, string> labels = 5;

  // User-supplied key/value data that does not need to conform to
  // the corresponding [NotificationChannelDescriptor]'s schema, unlike
  // the `"labels"` field. This field is intended to be used for organizing
  // and identifying the `"NotificationChannel"` objects.
  //
  // The field can contain up to 64 entries. Each key and value is limited to
  // 63 Unicode characters or 128 bytes, whichever is smaller. Labels and
  // values can contain only lowercase letters, numerals, underscores, and
  // dashes. Keys must begin with a letter.
  map<string, string> user_labels = 8;
}
